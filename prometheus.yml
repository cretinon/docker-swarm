version: "3"

networks:
  backend:
    driver: overlay
    ipam:
      driver: default
      config:
      - subnet: 10.4.0.0/24
  elk:
    external:
      name: elk_backend
  traefik:
    external:
      name: traefik_public


services:
  node-exporter:
    image: prom/node-exporter
    networks:
      - backend
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    environment:
      HOST_HOSTNAME: /etc/hostname
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc|run|var)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(shm|overlay|sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
#      - --collector.filesystem.ignored-mount-points="^/rootfs/(var/lib/docker/)|(run/docker/netns/).*"
#      - "--collector.filesystem.ignored-mount-points"
#      - '^(\/rootfs\/var\/lib\/|\/rootfs\/run\/docker\/|\/var\/run\/docker\/netns\/|\/(host|root)\/sys\/kernel\/debug\/).*'
#      - '--collectors.enabled="conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs"'
    hostname: "{{.Node.ID}}"
    deploy:
      mode: global

  docker-exporter:
    image: basi/socat:v0.1.0
    networks:
      - backend
    ports:
      - "4999"
    deploy:
      mode: global
      
  alertmanager:
    image: prom/alertmanager
    networks:
      - backend
      - elk
      - traefik
    ports:
      - "9093:9093"
    environment:
      LOGSTASH_URL: http://logstash:5000/
    command:
      - '-web.external-url=https://alertmanager.cretinon.fr'
      - '-config.file=/etc/alertmanager/config.yml'
    volumes:
      - /docker/share/prometheus/alertmanager/alertmanager.yml:/etc/alertmanager/config.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.port=9093
        - traefik.frontend.rule=Host:alertmanager.cretinon.fr
        - traefik.docker.network=traefik_public				      
#  influx:
#    image: influxdb
#    volumes:
#      - /docker/share/prometheus/influx:/var/lib/influxdb
#    networks:
#      backend:
#        aliases:
#          - influx_prom
#    deploy:
#      replicas: 1
#      placement:
#        constraints:
#          - node.role == manager

  prometheus:
    image: quay.io/prometheus/prometheus
    ports:
      - "9090"
    volumes:
      - /docker/share/prometheus/prometheus/etc/:/etc/prometheus/
    networks:
      - backend
      - traefik
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=https://prometheus.cretinon.fr'
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.port=9090
        - traefik.frontend.rule=Host:prometheus.cretinon.fr
        - traefik.docker.network=traefik_public

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: global
    networks:
      - backend
