version: "3"

networks:
  monitoring:


services:
  cadvisor:
    image: google/cadvisor:${CADVISOR_VERSION:-v0.24.1}
    networks:
      - monitoring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock,readonly
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker
    deploy:
      mode: global

  node-exporter:
    image: basi/node-exporter:${NODE_EXPORTER_VERSION:-v1.13.0}
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    environment:
      HOST_HOSTNAME: /etc/host_hostname
    command: -collector.procfs "/host/proc" -collector.sysfs /host/sys -collector.textfile.directory /etc/node-exporter/ -collectors.enabled 'conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs' # -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($|/)"
    deploy:
      mode: global

  docker-exporter:
    image: basi/socat:${DOCKER_EXPORTER_VERSION:-v0.1.0}
    networks:
      - monitoring
    deploy:
      mode: global

  alertmanager:
    image: basi/alertmanager:${ALERTMANAGER_VERSION:-v0.1.0}
    networks:
      - monitoring
      # - logging
    ports:
     - "9093:9093"
    environment:
      SLACK_API: ${SLACK_API:-YOURTOKENGOESHERE}
      LOGSTASH_URL: http://logstash:8080/
    command: -config.file=/etc/alertmanager/config.yml
    deploy:
      mode: replicated
      replicas: 1

  prometheus:
    image: basi/prometheus-swarm:${PROMETHEUS_SWARM_VERSION:-v0.4.1}
    ports:
      - "9090"
    networks:
      - monitoring
    command: -config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles -alertmanager.url=http://alertmanager:9093
    deploy:
      mode: replicated
      replicas: 1
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # disable X-Pack
      # see https://www.elastic.co/guide/en/x-pack/current/xpack-settings.html
      #     https://www.elastic.co/guide/en/x-pack/current/installing-xpack.html#xpack-enabling
      xpack.security.enabled: "false"
      xpack.monitoring.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:5.2.2
    volumes:
      - /docker/share/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - /docker/share/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 1

  kibana:
    image: docker.elastic.co/kibana/kibana:5.2.2
    volumes:
      - /docker/share/kibana/config:/usr/share/kibana/config
    ports:
      - "5601:5601"
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 1

  grafana:
    image: basi/grafana:${GRAFANA_VERSION:-v4.1.1}
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      GF_SERVER_ROOT_URL: http://grafana.${CLUSTER_DOMAIN}
      GF_SECURITY_ADMIN_PASSWORD: $GF_PASSWORD
      PROMETHEUS_ENDPOINT: http://prometheus:9090
      ELASTICSEARCH_ENDPOINT: $ES_ADDRESS
      ELASTICSEARCH_USER: $ES_USERNAME
      ELASTICSEARCH_PASSWORD: $ES_PASSWORD
    deploy:
      mode: replicated
